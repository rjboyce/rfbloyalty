# THIS IS THE CENTRALIZED LOCATION FOR THE MOST COMMONLY CHANGED PROPERTIES

#Internal Keycloak API connection credentials & authorization

# live
spring.security.oauth2.client.provider.oidc.issuer-uri=https://passus.website/auth/realms/vkind
kc.server=https://passus.website/auth

# local (for testing ONLY)
#spring.security.oauth2.client.provider.oidc.issuer-uri=http://localhost:9080/auth/realms/vkind
#kc.server=http://localhost:9080/auth

kc.realm=vkind
kc.user=ENC(O5jBim0YoPEreVW+ToPRMm5S3BLqM+WSQBO9TgXYRuGrlX3/2VK4j4w4zGBsIcT1)
kc.password=ENC(O5jBim0YoPEreVW+ToPRMm5S3BLqM+WSQBO9TgXYRuGrlX3/2VK4j4w4zGBsIcT1)
kc.client=ENC(rp6/H/rtqfPES7eWFvtDZYuIFcek0CmOAyU1DntSIAL/VxOxDxjFy2fmCY7WKLVM)

# none for using schema.sql/mysql, update or verify for liquibase
spring.jpa.hibernate.ddl-auto=none

#Keycloak realm connection credentials
spring.security.oauth2.client.registration.oidc.client-id=ENC(s7b9yUQQ2u+fJrt647CVYxJK/txSuhnfgRQXg/05eHc5J2l41FQC501ZqRj5Lq+q)
spring.security.oauth2.client.registration.oidc.client-secret=ENC(s7b9yUQQ2u+fJrt647CVYxJK/txSuhnfgRQXg/05eHc5J2l41FQC501ZqRj5Lq+q)
spring.security.oauth2.client.registration.oidc.scope=openid,profile,email

#force tomcat to redirect using proxy set up (e.g. ssl, assuming tomcat is behind a proxy such as apache or nginx)
server.tomcat.redirect-context-root=false

#=======================================================================================================
#MAKE SURE THE FOLLOWING LINE IS COMMENTED OUT FOR DEPLOYMENT!!! (for testing prod profile locally only)

#Active profile -- grouped profile settings are contained in application.yml
#spring.profiles.active=prod

#=======================================================================================================

#Hikari pooling/connection management is handled separately for each profile (e.g. application-dev.yml, application-prod.yml)
