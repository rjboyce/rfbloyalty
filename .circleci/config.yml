version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0

    steps:
      # Checkout the code as the first step.
      - checkout

      # Use mvn clean and package as the standard maven build phase
      - run:
          # PUT SENSITIVE ENVIRONMENT VARIABLES DIRECTLY UNDER CIRCLECI MANAGEMENT!!!
          # e.g. JASYPT_ENCRYPTOR_PASSWORD, SPRING_DATASOURCE_URL, SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI,
          # SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID, SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET

          name: Build
          command: mvn -B -DskipTests clean package

  test-with-integration:
    docker:
      - image: cimg/openjdk:11.0

    steps:
      - checkout
      # Then run your tests!
      # CircleCI needs additional configuration for integration tests (if separate test properties differ than those of the application)
      - run:
          environment:
            SPRING:
              JPA:
                GENERATE_DDL: 'TRUE'
                HIBERNATE:
                  DDL_AUTO: 'CREATE-DROP'
                DATABASE_PLATFORM: 'tech.jhipster.domain.util.FixedH2Dialect'
              SQL:
                INIT:
                  MODE: 'NEVER'
              SECURITY:
                OAUTH2:
                  CLIENT:
                    PROVIDER:
                      OIDC:
                        ISSUER_URI: 'http://DO_NOT_CALL:9080/auth/realms/jhipster'
              DATASOURCE:
                URL: 'jdbc:h2:mem:volunteerkind;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
          name: Verify
          command: mvn verify

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  charityapp:
    jobs:
      - build
      - test-with-integration
